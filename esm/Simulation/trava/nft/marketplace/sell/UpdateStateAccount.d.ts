import { ApplicationState } from "../../../../../State/ApplicationState";
import { NFTSellingState } from "../../../../../State/trava/nft/TravaNFTState";
export declare function updateSellingNFTFromContract(appState1: ApplicationState): Promise<ApplicationState>;
export declare function updateSellingNFTFromGraph(appState1: ApplicationState): Promise<ApplicationState>;
export declare function updateOwnedSellingNFTFromContract(appState1: ApplicationState, mode: "walletState" | "smartWalletState"): Promise<{
    createdTime: number;
    walletState: import("../../../../..").WalletState;
    smartWalletState: import("../../../../..").SmartWalletState;
    tokenPrice: Map<import("../../../../../utils/types").EthAddress, import("../../../../../utils/types").uint256>;
    NFTSellingState: NFTSellingState;
    NFTAuctioningState: import("../../../../../State/trava/nft/TravaNFTState").NFTAuctioningState;
    NFTVeTravaMarketSellingState: import("../../../../../State/trava/nft/TravaNFTState").NFTVeTravaSellingState;
    TravaGovernanceState: import("../../../../..").TravaGovernanceState;
    ExpeditionState: import("../../../../..").ExpeditionState;
    DilutionState: import("../../../../..").DilutionState;
    forkCompoundLPState: import("../../../../..").ForkedCompoundLPState;
    forkAaveLPState: import("../../../../..").ForkedAaveLPState;
    pancakeSwapV2Pair: import("../../../../..").PancakeSwapV2Pair;
    cs251state: import("../../../../..").cs251state;
    PancakeFarmState: import("../../../../..").PancakeFarmState;
    web3: import("ethers").JsonRpcProvider;
    chainId: number | string;
    simulatorUrl: string;
}>;
export declare function updateOwnedSellingNFT(appState1: ApplicationState): Promise<{
    createdTime: number;
    walletState: import("../../../../..").WalletState;
    smartWalletState: import("../../../../..").SmartWalletState;
    tokenPrice: Map<import("../../../../../utils/types").EthAddress, import("../../../../../utils/types").uint256>;
    NFTSellingState: NFTSellingState;
    NFTAuctioningState: import("../../../../../State/trava/nft/TravaNFTState").NFTAuctioningState;
    NFTVeTravaMarketSellingState: import("../../../../../State/trava/nft/TravaNFTState").NFTVeTravaSellingState;
    TravaGovernanceState: import("../../../../..").TravaGovernanceState;
    ExpeditionState: import("../../../../..").ExpeditionState;
    DilutionState: import("../../../../..").DilutionState;
    forkCompoundLPState: import("../../../../..").ForkedCompoundLPState;
    forkAaveLPState: import("../../../../..").ForkedAaveLPState;
    pancakeSwapV2Pair: import("../../../../..").PancakeSwapV2Pair;
    cs251state: import("../../../../..").cs251state;
    PancakeFarmState: import("../../../../..").PancakeFarmState;
    web3: import("ethers").JsonRpcProvider;
    chainId: number | string;
    simulatorUrl: string;
}>;
